В данном программном документе приведено описание программного средства «Модуль расширения сетевой операционной системы». Данное программное средство представляет собой модуль взаимодействия с виртуальными точками доступа и интеграции трафика беспроводных клиентов в сетях с централизованным программным обеспечением на основе протокола OpenFlow версии 1.0.0 и выше. Модуль подключается к контроллеру, собирает информацию о беспроводных точках доступа и их клиентах. Данный модуль использует контроллер NOX для базовой работы и библиотеки контроллера floodlight посредством средства JNI вызываемые из C++. 
Модуль может использоваться для управления виртуальными точками доступа. Программа написана на языке программирования С++.
Оформление программного документа «Описание программы» произведено по требованиям ЕСПД  (ГОСТ 19.101-77, ГОСТ 19.103-77, ГОСТ 19.104-78, ГОСТ 19.105-78, ГОСТ 19.106-78, ГОСТ 19.402-78, ГОСТ 19.604-78).

 
Содержание

Описание программы	1
1 Общие сведения	4
1.1 Обозначение и наименование программы	4
1.2 Программное обеспечение, необходимое для функционирования программы	4
1.3 Языки программирования, на которых написана программа	5
2 Функциональное назначение	5
2.1 Классы решаемых задач	5
2.2 Сведения о функциональных ограничениях	8
3 Описание логической структуры	8
3.1 Алгоритм программы	8
3.2 Структура программы с описанием функций составных частей и связи между ними	11
3.3 Используемые методы	11
3.4 Связи программы с другими программами	11
4 Используемые технические средства	11
5 Вызов и загрузка	12
6 Входные данные	12
7 Выходные данные	13

 
1 Общие сведения
1.1 Обозначение и наименование программы

Модуль расширения сетевой операционной системы:
	наименование файла: virtap.cc;
	размер файла: 4 Кб;
	версия файла:1.0;
	внутреннее имя: virtapmanager;
	исходное имя файла: virtap.cc;
	название продукта: «Модуль расширения сетевой операционной системы»;
	язык интерфейса: английский.

1.2 Программное обеспечение, необходимое для функционирования программы

Для функционирования программы «Модуль расширения сетевой операционной системы» на ПК необходимо следующее программное обеспечение сторонних разработчиков: 
- NOX – контроллер OpenFlow.
- библиотеки floodlight – библиотеки подробного анализа трафика.
 «Модуль расширения сетевой операционной системы» работает под управлением операционной системы Linux Ubuntu.

 
1.3 Языки программирования, на которых написана программа

Исходным языком программирования для программы «Модуль расширения сетевой операционной системы» является C++. 
     
2 Функциональное назначение
2.1 Классы решаемых задач

Программа предназначена для управления виртуальными точками доступа. В соответствии с  рисунком 1 показана функциональная схема программы.
 
Рисунок 1 – Функциональная схема программы

 
Продолжение рисунка 1 
2.2 Сведения о функциональных ограничениях

Программа работает исключительно с «Модулем виртуальной точки доступа» на клиентской стороне. Работа программы с другими поставщиками централизованного управления, таких как CAPWAP невозможна.

3 Описание логической структуры
3.1 Алгоритм программы

Контроллер всегда находится в ожидании внешних команд, которые могут генерироваться точками доступа, контроллером OpenFlow или таймером. При получении команды запускается требуемый алгоритм или ассоциированный с командой внешний модуль, такой как модуль балансировки нагрузки или модуль роуминга. На контроллере содержится массив (множество) записей о физических точках доступа, виртуальных точках доступа и о клиентах. По таймеру происходит запуск модуля балансировки, который автоматически переключает обслуживание клиентов между точками доступа по критерию лучшего сигнала. Также по таймеру периодически происходит получение статистических данных о точках и клиентах. Контроллер беспроводных точек управляет только уровнем доступа IEEE 802.11, при этом передачей данных от точки доступа управляет уже контроллер OpenFlow.
В соответствии с рисунком 2 показана укрупненная схема алгоритма работы контроллера виртуальной точки доступа.
 
Рисунок 2 – Укрупненная схема алгоритма программы
При наличии нескольких точек доступа в радиусе действия клиента, происходит переключение на наилучшую точку доступа в соответствии с рисунком 10.6, на котором показан алгоритм функции переключения на лучшую точку доступа. Данный алгоритм запускается по таймеру и гарантирует обслуживание каждого клиента только наиболее подходящей точкой доступа.

  Рисунок 3 – Алгоритм автоматического переключения на точку доступа с лучшим сигналом.
3.2 Структура программы с описанием функций составных частей и связи между ними

Программа «Модуль расширения сетевой операционной системы» не имеет составных частей.

3.3 Используемые методы

Для работы модуль использует метод инкапсуляции текстовых данных в сообщения TCP/IP для взаимодействия с модулем виртуальной точки доступа, метод прямого реактивного добавления записей в таблицы OpenFlow при оповещении программных коммутаторов об адресах контроллера и шлюза, метод обмена данными с СОС посредством JSON запросов. 

3.4 Связи программы с другими программами

Для нормальной работы модуля потребуются следующие программы:
а)	СОС NOX – контроллер OpenFlow;
б)	интерпретатор JDK NI для работы модуля, реализованного на языке java;
в)	СУБД SQLite, необходимая для хранения статистики, обработанной модулем.

4 Используемые технические средства

 Для работы программы должен быть использован IBM PC совместимый компьютер c процессором архитектуры x86/x86_64/risc/arm/mips и частотой не менее 2 ГГц, объемом оперативной памяти не менее 2 Гб и свободным местом на жестком диске в 20 Гб.
5 Вызов и загрузка

Модуль запускается в составе СОС NOX командой «nox –i ptcp:6633 switch virtap –d –p /tmp/nox.pid».
Для указания сетевых адресов используется файл параметров virtap.conf, находящийся в той же директории, что и исполняемый файл. 

6 Входные данные

Входными данными для программы является: 
а) информация из файла настроек. Характер данных – текстовая информация, организация данных – построчный текст, каждая строка несет отдельную смысловую нагрузку. Данные требуют предварительной подготовки с целью указания точного адреса контроллера, шлюза, адреса сетевой карты. Формат данных определяется форматом UNIX файлов настроек в виде «<#> параметр = значение1<, значение2, …>», где элементы в угловых скобках являются необязательными, «параметр» - это название определяемого вновь или переопределяемого параметра, «значение1», «значение2» - произвольные сочетания латинских букв, цифр, знаков препинания (кроме запятой), знак решетки в начале строки означает комментарий, не принимаемый программой во внимание. Кодировка данных – «UTF-8»;
б) информация от виртуальных точек доступа. Характер данных – двоичная структура, организация данных – в соответствии с двоичной архитектурой IP пакета. Данные предварительно обрабатываются как текстовый поток, из которого формируется TCP/IP пакет для контроллера. Формат данных «параметр идентификатор : значение», где «параметр» это название типа данных о клиенте, «идентификатор» используется для управления подпиской на автоматическую отсылку статистики контроллеру, это цифра, она ассоциирована с адресом клиента, «значение» - произвольная строка, содержащая искомое значение параметра. Также при сканировании возможен другой формат сообщения: «probe адрес ssid», «адрес» содержит MAC адрес клиента, выполняющего сканирование, «ssid» - имя сети для сканирования. Кодировка данных – «UTF-8».

7 Выходные данные

Выходным данным являются:
а) команды управления виртуальными точками доступа; Характер данных – текстовая информация, организация данных – текст с разделителями, каждый блок текста, ограниченный разделителями может содержать вложенный блок подобной структуры, все они несут отдельную смысловую нагрузку. Данные подвергаются предварительной обработке на отправляющей стороне, где преобразуются из внутренних структур программы в текстовый формат. Формат данных определяется структурой JSON «{ параметр: <{> <[> значение <, значение> <]> <}>, < параметр: <{> <[> значение <, значение> <]> <}> > }», где элементы в угловых скобках являются необязательными, «параметр» - это название определяемого вновь параметра, значение – произвольная строка текста, ограниченная кавычками, при необходимости определить массив список значений заключают в квадратные скобки, для вложенных структур используют фигурные скобки. Кодировка данных – «UTF-8»;
б) статистическая информация. Характер данных – текстовая информация, организация данных – текст с разделителями, каждый блок текста, ограниченный разделителями может содержать вложенный блок подобной структуры, все они несут отдельную смысловую нагрузку. Данные подвергаются предварительной обработке на отправляющей стороне, где преобразуются из внутренних структур программы в текстовый формат. Формат данных определяется структурой JSON, описанной в п. а). Кодировка данных – «UTF-8».
